openapi: 3.1.0
info:
  title: UPS Track Alert API
  description: |

    # Product Info

    The UPS Track Alert API provides best in-class package tracking visibility with near real time event updates for an improved customer experience and stream line logistic management.
    Updates are pushed to the user as soon as available with no constant polling required, thereby improving operational efficiency. For more information on the UPS Track Alert API, please visit the <a href="https://developer.ups.com/api/reference/trackalertenhanced/product-info"
    target="_blank" rel="noopener">Product Info</a> page.
    <br/><p>Try out UPS APIs with example requests using Postman. Explore API documentation and sample applications through GitHub.</p>

    <a href="https://god.gw.postman.com/run-collection/29542085-7513df2c-af1b-4e5c-8b5d-5797d03a6a44?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-7513df2c-af1b-4e5c-8b5d-5797d03a6a44%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417" target="_blank" rel="noopener noreferrer">
      <img src="https://run.pstmn.io/button.svg" alt="Run In Postman" style="width: 128px; height: 32px;"></a>
    <a href="https://github.com/UPS-API" target="_blank" rel="noopener noreferrer">
      <img src="https://www.ups.com/assets/resources/webcontent/images/gitHubButton.svg" alt="Open in GitHub" style="width: 128px; height: 32px;">
    </a>
    
    # Business Values

    - **Enhanced Customer Experience**: Near real-time tracking information increases transparency, leading to higher customer satisfaction and trust.
    - **Operational Efficiency**: Eliminates the necessity for continuous polling, thus saving resources and improving system responsiveness.
    - **Data-Driven Decision Making**: Access to near real-time data can help businesses optimize their supply chain and make informed logistics decisions.
    - **Optimizing Cash Flow Through Near Real-Time Delivery Tracking**: Improve cash flow by knowing that deliveries occurred in near real time.
    - **Mitigating Fraud and Theft through Near Real-Time Package Status Monitoring**: Reduce fraud and theft by knowing any time something happens to your packages.
    
    # How does it work once I am setup as a user?
    You submit up to 100 UPS 1Z package tracking numbers to the API at a time, using OAUTH in a JSON format.  Your submission needs to include the URL where Track Alert will send a message with any events that occur to your 1Z package for the next 14 days.  This saves you the effort of polling UPS to determine what is the current status of your package.
    
    # FAQs
    - **How do I check if a subscription to a 1Z was successful?**
    >  Within 8 seconds of submitting a 1Z package tracking number to Track Alert, you will receive a message confirming successful and un-successful 1Z's.  

    - **I stopped receiving event messages after 2 weeks and my package hasnâ€™t been delivered. Why?**
    >  Each 1Z subscription is valid for 14 days.  If the package has not been delivered within 14 days, you must resubscribe to the 1Z to continue receiving updates/events.

    - **How do I get events that occurred prior to subscription?**
    >  Track Alert does not retain any history.  You should use the UPS Track API to receive history about your package.  

    - **How many 1Z tracking numbers can a subscriber subscribe to in one request?**
    >  You can subscribe to up to 100 1Z in each submission to the API.  A reply message will be sent via the API with details showing successful and unsuccessful 1Z's submissions.

    - **What types of event data does Track Alert provide?**
    >  In addition to the expected local dates and times when the event occurred (including GMT date and time), you will receive details about the event that include status-type, status-code, status-description and status-description code.
      Status types are:
          M and MV = manifest information, 
          X = exception information (something out of the normal happened to your package, but it may still be delivered on time), 
          I = in-progress (on the way or moving normally through the UPS network), 
          U = update (there is an update to your package, normally the scheduled delivery has been updated, but it may still be delivered on time)
          D = delivery information (loaded on delivery vehicle, out for delivery, delivered)
      Status codes are a 2-character code that provide details about the event.  There is a list of these codes and their translations elsewhere on this portal.
      Status descriptions are a very brief (a few words) describing the status code.
      Status-description code is a overly simplified description of the event.  This description is intended for those who do not understand transportation.

    - **What does the message look like?**
    >  This is what a message looks like for an event that is sent to your URL.  Not every field will have a value for every message.  We have converted the JSON format message to text format for clarity.  
        Those fields are: 
        1Z package tracking number 
        scheduled delivery date (this field maybe updated, example '20240905')
        actual delivery date (this field is blank until the delivery event occurs)
        actual delivery time (this field is blank until the delivery event occurs)
        activity location city
        activity location state/province
        activity location postal code (this field is blank until the delivery event occurs)
        activity location country
        activity status type
        activity status code
        activity status description
        activity status description code
        local activity date
        local activity time
        GMT activity date
        GMT activity time
        delivery start time (example '150000')
        delivery end time (example '170000')
        delivery time description (example 'estimated delivery window' or 'end of day')
        delivery photo (this field is only available for enhanced users)

    - **Can I test this process?**
    >  Yes, there are two test 1Z's that you can submit, and resubmit that will send several events spaced 1 second apart.  Those two test 1Z's are 1ZCIETST0111111114 and 1ZCIETST0422222228.  Please ensure to use UPS Production CIE(https://wwwcie.ups.com/api/track/{version}). You can submit these 1Z's as often as you like. (no stress testing please.) 


    # Error Codes

    | Error Code | HTTP Status | Description                                                                                                                                                                                              |
    |------------|-------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
    | VSS000     | 400         | Invalid request and The Subscription request has been rejected.                                                                                                                                          |
    | VSS002     | 400         | Missing transId.                                                                                                                                                                                         |
    | VSS003     | 400         | Please enter a valid Transaction ID, The Subscription request has been rejected.                                                                                                                         |
    | VSS004     | 400         | Missing transactionSrc.                                                                                                                                                                                  |
    | VSS006     | 400         | Please enter a valid Transaction SRC, The Subscription request has been rejected.                                                                                                                        |
    | VSS100     | 500         | We're sorry, the system is temporarily unavailable. Please try again later.                                                                                                                              |
    | VSS110     | 400         | Subscription request is empty or not present. The Subscription request has been rejected.                                                                                                                |
    | VSS200     | 400         | Tracking Number List is required. The Subscription request has been rejected.                                                                                                                            |
    | VSS210     | 400         | The Subscription request should have at least one valid tracking number. The Subscription request has been rejected.                                                                                     |
    | VSS215     | 400         | The 1Z tracking number that was submitted is not a valid CIE 1Z and has been rejected.                                                                                                                   |
    | VSS220     | 400         | You have submitted over 100 1Z numbers which is not allowed. The entire submission of 1Z numbers has been rejected. Please resubmit your request again using groups of no more than 100 1Z numbers.      |
    | VSS300     | 400         | Locale is required. The Subscription request has been rejected.                                                                                                                                          |
    | VSS310     | 400         | Please enter a valid locale. The Subscription request has been rejected.                                                                                                                                 |
    | VSS400     | 400         | Please enter a valid country code. The Subscription request has been rejected.                                                                                                                           |
    | VSS500     | 400         | Destination is required. The Subscription request has been rejected.                                                                                                                                     |
    | VSS600     | 400         | URL is empty or not present. The Subscription request has been rejected.                                                                                                                                 |
    | VSS610     | 400         | URL is too long. The Subscription request has been rejected.                                                                                                                                             |
    | VSS700     | 400         | Credential is empty or not present. The Subscription request has been rejected.                                                                                                                          |
    | VSS800     | 400         | CredentialType is empty or not present. The Subscription request has been rejected.                                                                                                                      |
    | VSS930     | 400         | Type is missing or invalid, The Subscription request has been rejected.   


servers:
  - url: https://wwwcie.ups.com/api/track/{version}
    description: UPS Production CIE OAuth. This is for integration testing only and it will not create any subscription.
    variables:
      version:
       default: v1
       enum:
          - v1
  - url: https://onlinetools.ups.com/api/track/{version}
    description: UPS Production OAuth.
    variables:
      version:
        default: v1
        enum:
          - v1
paths:
  /subscription/standard/package:
    post:
      description: |
         This endpoint takes a list of tracking numbers and creates a subscription for each.
         Clients must provide the tracking numbers in the correct format.

         Upon success it should return:
         - List of valid tracking number for which subscription created.
         - List of invalid tracking number for which subscription not created.
      tags:
        - UPS Track Alert
      summary: API to create subscriptions by tracking numbers.
      operationId: processSubscriptionTypeForTrackingNumber
      security:
        - OAuth2: []
      parameters:
        - name: transId
          in: header
          description: An identifier unique to the request.
          required: true
          schema:
            type: string
        - name: transactionSrc
          in: header
          description: Identifies the client/source application that is calling.
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: version
          required: true
          schema:
            type: string
          default: v1
          enum:
            - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackSubsServiceRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackSubsServiceResponse'
              examples:
                PartialSuccessExample:
                  description: Example response that contains valid tracking number for which subscription created and invalid tracking numbers.
                  value:
                    validTrackingNumbers:
                      - 1Z12345678912345560
                    invalidTrackingNumbers:
                      - 1Z1234567$8
                CompleteSuccessExample:
                  description: Example response that contains valid tracking numbers for which subscription created.
                  value:
                    validTrackingNumbers:
                      - 1Z12345678912345560
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackSubsServiceErrorResponse'
              example:
                    response:
                      errors:
                        - code: VSS300
                          message: Locale is required. The Subscription request has been rejected.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackSubsServiceErrorResponse'
              example:
                errors:
                  - code: UJ0001
                    message: Invalid token or token is not present.
        '404':
          description: URL does not exist or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
              example:
                errors:
                  - code: "404"
                    message: The requested resource was not found.
        '403':
            description: Blocked Merchant
            content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/TrackSubsServiceErrorResponse"
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
              example:
                errors:
                  - code: "405"
                    message: The requested method is not allowed for this resource.
        '429':
            description: Rate Limit Exceeded
            content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/TrackSubsServiceErrorResponse"
        '500':
          description: Internal Server Error
webhooks:
  TrackingEvent:
    post:
      summary: Tracking Event
      description: This is an HTTP POST request that will relay information about a new tracking event in the system. Please ensure that the URL endpoint passed in the subscription request is ready to accept this POST request. Please note that not every field will have a value for every message.

      tags:
        - UPS Track Alert
      parameters:
        - name: credential
          in: header
          description: It is an opaque string meant for client authentication. Shared in Subscription request.
          required: true
          schema:
            type: string
        - name: User-Agent
          in: header
          description: Represents Track Alert application with value 'UPSPubSubTrackingService'.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingEventRequest'
            examples:
                '1':
                  summary: Manifest (label created or billing information received) message
                  value:
                    activityLocation:
                      city: ''
                      country: US
                      postalCode: ''
                      stateProvince: ''
                    activityStatus:
                      code: MP
                      description: Shipment Ready for UPS
                      descriptionCode: '003'
                      type: M
                    actualDeliveryDate: ''
                    actualDeliveryTime: ''
                    deliveryEndTime: ''
                    deliveryPhoto: ''
                    deliveryStartTime: ''
                    deliveryTimeDescription: ''
                    gmtActivityDate: '20240422'
                    gmtActivityTime: '041230'
                    localActivityDate: '20240422'
                    localActivityTime: '091230'
                    scheduledDeliveryDate: ''
                    trackingNumber: " 1ZABCXYZ0112346789"
                '2':
                  summary: UPS has your package message
                  value:
                    activityLocation:
                      city: Hickory
                      country: US
                      postalCode: ''
                      stateProvince: NC
                    activityStatus:
                      code: OR
                      description: On the Way
                      descriptionCode: '005'
                      type: I
                    actualDeliveryDate: ''
                    actualDeliveryTime: ''
                    deliveryEndTime: ''
                    deliveryPhoto: ''
                    deliveryStartTime: ''
                    deliveryTimeDescription: end of day
                    gmtActivityDate: '20240423'
                    gmtActivityTime: '012901'
                    localActivityDate: '20240422'
                    localActivityTime: '212901'
                    scheduledDeliveryDate: '20240423'
                    trackingNumber: 1ZABCXYZ0112346789
                '3':
                  summary: On the way (arrival or departure from a UPS building) message
                  value:
                    activityLocation:
                      city: Hickory
                      country: US
                      postalCode: ''
                      stateProvince: NC
                    activityStatus:
                      code: DP
                      description: On the Way
                      descriptionCode: '005'
                      type: I
                    actualDeliveryDate: ''
                    actualDeliveryTime: ''
                    deliveryEndTime: ''
                    deliveryStartTime: ''
                    deliveryTimeDescription: end of day
                    gmtActivityDate: '20240423'
                    gmtActivityTime: '025400'
                    localActivityDate: '20240422'
                    localActivityTime: '225400'
                    scheduledDeliveryDate: '20240423'
                    trackingNumber: 1ZABCXYZ0112346789
                '4':
                  summary: Preparing for delivery message
                  value:
                    trackingNumber: 1ZABCXYZ0112346789
                    localActivityDate: '20240423'
                    localActivityTime: '003052'
                    activityLocation:
                      city: Charlotte
                      stateProvince: NC
                      postalCode: ''
                      country: US
                    activityStatus:
                      type: I
                      code: YP
                      description: Preparing for Delivery
                      descriptionCode: '071'
                    scheduledDeliveryDate: '20240423'
                    actualDeliveryDate: ''
                    actualDeliveryTime: ''
                    gmtActivityDate: '20240423'
                    gmtActivityTime: '043052'
                    deliveryStartTime: ''
                    deliveryEndTime: ''
                    deliveryTimeDescription: end of day
                '5':
                  summary: Preparing for delivery/loaded on vehicle message
                  value:
                    trackingNumber: 1ZABCXYZ0112346789
                    localActivityDate: '20240423'
                    localActivityTime: '063936'
                    activityLocation:
                      city: Charlotte
                      stateProvince: NC
                      postalCode: ''
                      country: US
                    activityStatus:
                      type: I
                      code: YP
                      description: Preparing for Delivery
                      descriptionCode: '071'
                    scheduledDeliveryDate: '20240423'
                    actualDeliveryDate: ''
                    actualDeliveryTime: ''
                    gmtActivityDate: '20240423'
                    gmtActivityTime: '103936'
                    deliveryStartTime: ''
                    deliveryEndTime: ''
                    deliveryTimeDescription: end of day
                '6':
                  summary: Out for delivery message
                  value:
                    trackingNumber: 1Z204W4R0308071865
                    localActivityDate: '20240423'
                    localActivityTime: '091519'
                    activityLocation:
                      city: Charlotte
                      stateProvince: NC
                      postalCode: ''
                      country: US
                    activityStatus:
                      type: I
                      code: OT
                      description: Out for Delivery
                      descriptionCode: '021'
                    scheduledDeliveryDate: '20240423'
                    actualDeliveryDate: ''
                    actualDeliveryTime: ''
                    gmtActivityDate: '20240423'
                    gmtActivityTime: '131519'
                    deliveryStartTime: ''
                    deliveryEndTime: ''
                    deliveryTimeDescription: end of day
                '7':
                  summary: Delivery message
                  value:
                    trackingNumber: 1Z204W4R0308071865
                    localActivityDate: '20240423'
                    localActivityTime: '095004'
                    activityLocation:
                      city: CHARLOTTE
                      stateProvince: NC
                      postalCode: '28209'
                      country: US
                    activityStatus:
                      type: D
                      code: FS
                      description: Delivered
                      descriptionCode: '011'
                    scheduledDeliveryDate: ''
                    actualDeliveryDate: '20240423'
                    actualDeliveryTime: '095004'
                    gmtActivityDate: '20240423'
                    gmtActivityTime: '135004'
                    deliveryStartTime: ''
                    deliveryEndTime: ''
                    deliveryTimeDescription: ''
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: |
        "Find your Client ID and Secret on your app info page.
         1. Select "Try It"
         2. In the Security section enter your Client ID and Secret.
         3. Select \"Request Token\"
         4. Enter any additional information in the Body and Parameters sections.
         5. Select "Send" to execute your API request"
      flows:
        clientCredentials:
          x-tokenEndpointAuthMethod: client_secret_basic
          tokenUrl: https://wwwcie.ups.com/security/v1/oauth/token
          scopes: {}
  schemas:
    Destination:
      type: object
      required:
        - url
        - credentialType
        - credential
      properties:
        url:
          type: string
          format: url
          description: |
            It is an HTTP-based callback end point that is exposed by the client to receive event notification. This endpoint must be operational around the clock to ensure no event notifications are missed.
            If this endpoint is not continuously available, incoming events will be lost.
          example: "https://test.ups.com"
        credentialType:
          type: string
          description: It is an open-entry field that indicates type of credentials supported by the client.
          example: Bearer
        credential:
          type: string
          description: It is an opaque string meant for client authentication. If for any reason this credential changes then any event notification will fail until a new subscription is made.
      description: The destination container related to the clients endpoint API. To which messages would be sent on an event on the package.
    TrackSubsServiceRequest:
      required:
        - locale
        - countryCode
        - trackingNumberList
        - destination
      type: object
      properties:
        locale:
          type: string
          description: Locale setting is composed of language code and country code, separated by an underscore. This field is reserved for future use.
          pattern: '^[a-z]{2}_[A-Z]{2}$'
          example: en_US
        countryCode:
          type: string
          description: Represents the country code. This field is reserved for future use.
          example: US
        trackingNumberList:
          type: array
          description: Represents list of tracking numbers in request.
          maxItems: 100
          example: ["1ZCIETST0111111114","1ZCIETST0422222228"]
          items:
            type: string
            pattern: '^1Z[0-9A-Z]{16}$'
            description: Represents tracking numbers starting with '1Z', followed by 16 alphanummeric characters in request.
        eventPreference:
          type: array
          description: Represents scan/event preferences for the subscription endpoint, Place holder for Future use.
          items:
            type: string
            description: Represents scan/event preferences for the subscription endpoint, Place holder for Future use.
        destination:
          $ref: '#/components/schemas/Destination'
    ErrorMessage:
      type: object
      properties:
        code:
          type: string
          description: The error code.
          example: VSS300
        message:
          type: string
          description: The error message.
          example: Locale is required. The Subscription request has been rejected.
      description: The error response containing any errors that occurred
    TrackSubsServiceResponse:
      type: object
      properties:
        validTrackingNumbers:
          type: array
          description: List of tracking numbers with successful subscription created.
          items:
            type: string
          example: ["1Z1234567891234556", "1ZABCDEFH91234556"]
        invalidTrackingNumbers:
          type: array
          description: List of tracking numbers associated with errors preventing subscription creation.
          items:
            type: string
          example: ["1Z1234567$8"]
    TrackSubsServiceErrorResponse:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/Response'
        invalidTrackingNumbers:
          $ref: "#/components/schemas/TrackSubsServiceResponse/properties/invalidTrackingNumbers"
      required:
       - response
    Response:
      type: object
      properties:
         errors:
          type: array
          description: The error response containing any errors that occurred.
          items:
            $ref: '#/components/schemas/ErrorMessage'
    TrackingEventRequest:
      type: object
      description: Package event update payload.
      properties:
        trackingNumber:
          type: string
          description: The package's tracking number.
          pattern: '^1Z[0-9A-Z]{16}$'
          example: 1Z1234567891234556
        localActivityDate:
          type: string
          description: 'The localized date of the activity. Format: YYYYMMDD'
          minLength: 8
          maxLength: 8
          pattern: ^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$
          example: "20191014"
        localActivityTime:
          type: string
          description: 'The localized time of the activity. Format: HHMMSS (24 hr)'
          minLength: 6
          maxLength: 6
          pattern: ^([01]?\d|2[0-3])([0-5]?\d){2}$
          example: "235959"
        activityLocation:
          "$ref": "#/components/schemas/ActivityLocation"
        activityStatus:
          "$ref": "#/components/schemas/ActivityStatus"
        scheduledDeliveryDate:
          type: string
          description: 'Original scheduled delivery date of the package. Format: YYYYMMDD'
          minLength: 8
          maxLength: 8
          pattern: ^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$
          example: "20191014"
        actualDeliveryDate:
          type: string
          description: 'Actual delivery date of the package. Format: YYYYMMDD (This field is blank until the delivery event occurs)'
          minLength: 8
          maxLength: 8
          pattern: ^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$
          example: "20191014"
        actualDeliveryTime:
          type: string
          description: 'Actual delivery time of the package. Format: HHMMSS (24 hr) (This field is blank until the delivery event occurs)'
          minLength: 6
          maxLength: 6
          pattern: ^([01]?\d|2[0-3])([0-5]?\d){2}$
          example: "235959"
        gmtActivityDate:
          type: string
          description: 'The GMT date of the activity. Format: YYYYMMDD'
          minLength: 8
          maxLength: 8
          pattern: ^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$
          example: "20191014"
        gmtActivityTime:
          type: string
          description: 'The GMT time of the activity. Format: HHMMSS (24 hr)'
          minLength: 6
          maxLength: 6
          pattern: ^([01]?\d|2[0-3])([0-5]?\d){2}$
          example: "235959"
        deliveryStartTime:
          type: string
          description: 'The start time of a delivery. Format: HHMMSS (24 hr).'
          minLength: 6
          maxLength: 6
          pattern: ^([01]?\d|2[0-3])([0-5]?\d){2}$
          example: "235959"
        deliveryEndTime:
          type: string
          description: 'The end time of a window or the committed time or the delivered time. Format: HHMMSS (24 hr)'
          minLength: 6
          maxLength: 6
          pattern: ^([01]?\d|2[0-3])([0-5]?\d){2}$
          example: "235959"
        deliveryTimeDescription:
          type: string
          description: The date of this delivery detail.
    ActivityLocation:
      type: object
      description: The container which has the current package activity location.
      properties:
        city:
          type: string
          description: The physical address city.
          example: Alpharetta
        stateProvince:
          type: string
          description: The physical address state or province.
          minLength: 2
          maxLength: 2
          pattern: ^[A-Z]{2}$
          example: GA
        postalCode:
          type: string
          description: The physical address postal code (This field is blank until the delivery event occurs).
          minLength: 5
          maxLength: 9
          pattern: ^\d{5}(?:[-\s]\d{4})?$
          examples:
            - "30004"
            - "30004-4616"
        country:
          type: string
          description: The physical address country.
          minLength: 2
          maxLength: 2
          pattern: ^[A-Z]{2}
          example: US
    ActivityStatus:
      type: object
      description: The container which has the current package activity status.
      properties:
        type:
          type: string
          description: | 
            The current activity status type.

            | Code  | Type                          |
            | :--:  | :--                           |
            | D     | Delivery                      |
            | I     | On the Way                    |
            | M     | Manifest                      | 
            | MV    | Manifest Void                 | 
            | U     | Updated Delivery Date or Time | 
            | X     | Package Exception             | 
        code:
          type: string
          description: The current activity status code.
        description:
          type: string
          description: The current activity status description.


                                                                                                                            