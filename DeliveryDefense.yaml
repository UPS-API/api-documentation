openapi: 3.1.0
info:
  title: DeliveryDefense API
  description: |
    Address Confidence  
    
    For more information on the Delivery Defense API, please visit the <a href="https://developer.ups.com/api/reference/deliverydefense/product-info" target="_blank" rel="noopener">Product Info</a> page.

    <br/><p>Try out UPS APIs with example requests using Postman. Explore API documentation and sample applications through GitHub.</p>
    
    <a href="https://god.gw.postman.com/run-collection/29542085-03fdbe2a-6b74-4fc6-8e9a-6a288b2dd47d?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-03fdbe2a-6b74-4fc6-8e9a-6a288b2dd47d%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417" target="_blank" rel="noopener noreferrer">
      <img src="https://run.pstmn.io/button.svg" alt="Run In Postman" style="width: 128px; height: 32px;"></a>
    <a href="https://github.com/UPS-API" target="_blank" rel="noopener noreferrer">
      <img src="https://www.ups.com/assets/resources/webcontent/images/gitHubButton.svg" alt="Open in GitHub" style="width: 128px; height: 32px;">
    </a>
    
    # Purpose
    
    The API is designed to enable customers to obtain an Address Confidence score based on analysis of historical data.
version: "1.0"
tags:
  - name: Delivery Defense
servers:
  - url: https://wwwcie.ups.com/api/deliverydefense/external/v1.0
    description: DeliveryDefense Customer Integration Environment
  - url: https://onlinetools.ups.com/api/deliverydefense/external/v1.0
    description: DeliveryDefense Production Environment
paths:
  /address/score:
    post:
      tags:
        - Delivery Defense
      operationId: "score"
      summary: Get Verified Address Score
      description: |
        This API cleans and verifies inputted addresses to enhance the accuracy of generating an Address Confidence score. The returned data includes the cleaned address, the Address Confidence score, and an indication of whether the address is commercial or residential.
      security:
        - OAuth2: []        
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequestBody'
            examples:
              SampleAddressScoreCheck:
                value:
                  street: "1173 CLARENDON DR"
                  city: "MARIETTA"
                  state: "GA"
                  zipCode: "30068"

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
              examples:
                "Low Likelihood of loss":
                  value:
                    status:
                      message: OK
                    data:
                      address: 1173 CLARENDON DR, MARIETTA, GA 30068, US,
                      street: 1173 CLARENDON DR
                      city: MARIETTA
                      state: GA
                      zipCode: "30068"
                      country: US
                      score: 988
                      resiComFlag: Residential
                "4X Likelihood of loss than score of 900-1000":
                  value:
                    status:
                      message: OK
                    data:
                      address: 1201 CLENDON DR, MARIETTA, GA 30169, US
                      street: 1201 CLENDON DR
                      city: MARIETTA
                      state: GA
                      zipCode: "30169"
                      country: US
                      score: 870
                      resiComFlag: Residential
                "16X Likelihood of loss than score of 900-1000":
                  value:
                    status:
                      message: OK
                    data:
                      address: 1305 CLENDON DR, MARIETTA, GA 20169, US
                      street: 1305 CLENDON DR
                      city: MARIETTA
                      state: GA
                      zipCode: "20169"
                      country: US
                      score: 650
                      resiComFlag: Residential
                "18X Likelihood of loss than score of 900-1000":
                  value:
                    status:
                      message: OK
                    data:
                      address: 1301 CLENDON DR, MARIETTA, GA 20169, US
                      street: 1301 CLENDON DR
                      city: MARIETTA
                      state: GA
                      zipCode: "20169"
                      country: US
                      score: 350
                      resiComFlag: Residential
                "21X Likelihood of loss than score of 900-1000":
                  value:
                    status:
                      message: OK
                    data:
                      address: 1301 CLENDON DR, MARIETTA, GA 20169, US
                      street: 1301 CLENDON DR
                      city: MARIETTA
                      state: GA
                      zipCode: "20169"
                      country: US
                      score: 250
                      resiComFlag: Residential

        '204':
          description: |
            The request was successful, and the address format is valid, but no score could be calculated.</br>
            This response means that while the address format is correct, there is no scoring information available for it.</br>
            **Example Scenario**:
              - **Request**: A client submits an address for scoring.
              - **Response**: The server returns a `204 No Content` status.
            

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
              examples:
                StateFieldMissing:
                  value:
                    type: https://tools.ietf.org/html/rfc7231#section-6.5.1
                    title: One or more validation errors occurred.
                    status: 400
                    traceId: 00-c6bf8291d14e90ddd363d057cc837f39-897c1324fd309af2-00
                    errors:
                      State: 
                        - The State field is required.
                StreetFieldMissing:
                  value:
                    type: https://tools.ietf.org/html/rfc7231#section-6.5.1
                    title: One or more validation errors occurred.
                    status: 400
                    traceId: 00-c6bf8291d14e90ddd363d057cc837f39-897c1324fd309af2-00
                    errors:
                      Street:
                        - The Street field is required.
                CityFieldMissing:
                  value:
                    type: https://tools.ietf.org/html/rfc7231#section-6.5.1
                    title: One or more validation errors occurred.
                    status: 400
                    traceId: 00-c6bf8291d14e90ddd363d057cc837f39-897c1324fd309af2-00
                    errors:
                      City:
                        - The City field is required.
                ZipCodeFieldMissing:
                  value:
                    type: https://tools.ietf.org/html/rfc7231#section-6.5.1
                    title: One or more validation errors occurred.
                    status: 400
                    traceId: 00-c6bf8291d14e90ddd363d057cc837f39-897c1324fd309af2-00
                    errors:
                      ZipCode:
                        - The ZipCode field is required.

        '401':
          description: Unauthorized
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error'
              examples:
                InvalidToken:
                  value: 
                    errorCode: "401"
                    errorMessage: Invalid Authentication Information. 
              
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: |
        Find your Client ID and Secret on your app info page. 
          1. Select "Try It" 
          2. In the Security section enter your Client ID and Secret 
          3. Select "Request Token"
          4. Enter any additional information in the Body and Parameters sections
          5. Select "Send" to execute your API request"
      flows:
        clientCredentials:
          x-tokenEndpointAuthMethod: client_secret_basic
          tokenUrl: https://wwwcie.ups.com/security/v1/oauth/token
          scopes: {}
          
  schemas:
    AddressRequestBody:
      type: object
      properties:
        street:
          type: string
          description: >-
            Indicates street address and unit number (if applicable) required
            for lookup
        city:
          type: string
          description: Indicates city required for lookup
        state:
          type: string
          description: Indicates state required for lookup
        zipCode:
          type: string
          pattern: ^[0-9]{5}(?:-[0-9]{4})?$
          description: Indicates zipcode required for lookup
      required:
        - street
        - city
        - state
        - zipCode
      additionalProperties: false
    Error:
      type: object
      properties:
        errorCode:
          type: string
          description: An error code representing the type of error.
        errorMessage:
          type: string
          description: |
            * Invalid Authentication Information.
      required:
        - errorCode
        - errorMessage

    Error400:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: url
        title:
          type: string
          description: One or more validation errors occurred
        status:
          type: integer
          description: |
            * 400
        traceId:
          type: string
          description: auto generated Id
        errors:
          type: object
          additionalProperties: true
          description: |
            * The Street field is required.
            * The City field is required.
            * The State field is required.
            * The ZipCode field is required.
            * Invalid Address.
            * Please enter address in appropriate format.
            * Invalid ZipCode.
    success:
      type: object
      properties:
        status:
          type: object
          properties:
            message:
              type: string
              description: Indicates request information was accepted and processed
        data:
          type: object
          properties:
            address:
              type: string
              description: Indicates address used for search
            street:
              type: string
              description: Street name in address
            city:
              type: string
              description: City name in address
            state:
              type: string
              description: State code in address
            zipCode:
              type: string
              description: Zipcode in address
            country:
              type: string 
              description: Country code in address 
            score:
              type: integer
              description: >
                * If range is between 900-1000 then there is a low likelihood of
                loss.

                * If range is between 700-899 then likelihood of loss is 4x
                higher than a score of 900-1000.

                * If range is between 500-699 then likelihood of loss is 16x
                higher than a score of 900-1000.

                * If range is between 300-499 then likelihood of loss is 18x
                higher than a score of 900-1000.

                * If range between 100-299 then likelihood of loss is 21x higher
                than a score of 900-1000.
            resiComFlag:
              type: string
              description: >-
                Indicates if the address used for lookup is residential or
                commercial